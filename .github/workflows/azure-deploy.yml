name: Azure Infrastructure Setup

on:
  push:
    branches:
      - main

env:
  TF_VAR_azure_region: 'australiaeast'
  TF_VAR_resource_group_name: 'microservices-demo-rg'
  TF_VAR_acr_name: 'microservicesdemoregistry'

jobs:
  setup_infrastructure:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI login
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install terraform

    - name: Initialize Terraform
      run: |
        cd deployment/terraform/aks
        terraform init

    - name: Check and deploy ACR and AKS
      run: |
        cd deployment/terraform/aks

        echo "Checking ACR existence"
        acrExists=$(az acr check-name --name $TF_VAR_acr_name --query nameAvailable --output tsv)
        if [ "$acrExists" == "false" ]; then
          echo "ACR $TF_VAR_acr_name already exists. Skipping ACR creation."
        else
          echo "ACR $TF_VAR_acr_name does not exist. Proceeding with ACR creation."
          terraform apply -auto-approve -target=azurerm_container_registry.acr
        fi

        echo "Checking AKS existence"
        az aks show --name microservices-demo-aks --resource-group $TF_VAR_resource_group_name --query 'name' --output tsv
        if [ $? -eq 0 ]; then
          echo "AKS cluster microservices-demo-aks already exists. Skipping AKS creation."
        else
          echo "AKS cluster microservices-demo-aks does not exist. Proceeding with AKS creation."
          terraform apply -auto-approve -target=azurerm_kubernetes_cluster.aks
        fi

    - name: Azure CLI logout
      run: |
        az logout
        echo "Azure infrastructure setup completed."
